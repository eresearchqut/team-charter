name: Release
on:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  GIT_ACC: eresearchqut

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - run: corepack enable
      - name: Configure caching
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn
      - name: Install dependencies
        run: yarn install
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Regex matching
        uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.ref_name }}
          regex: '([a-z-]+)\/v[0-9]+.[0-9]+.[0-9]+'

      - name: Exit if tag not matched
        if: ${{ steps.regex-match.outputs.match == '' }}
        run: |
          echo "Tag was not matched"
          exit 1

      - name: Set APP in env
        run: echo "APP=${{ steps.regex-match.outputs.group1 }}" >> $GITHUB_ENV

      - name: Log into the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GIT_USERNAME }}
          password: ${{ secrets.GIT_GHR_SECRET }}

      - name: Extract metadata for the Docker image
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.GIT_ACC }}/${{ env.APP }}
          tags: type=match,pattern=\d.\d.\d

      - name: Build and push the Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "APP=${{ env.APP }}"
